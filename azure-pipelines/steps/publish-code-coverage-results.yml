steps:
  # This script only runs for one set of unit tests (to avoid duplicate uploads) and will only run when the variable
  # CODECLIMATE_REPORTER_ID is available, which means this step is disabled for PRs from forked repositories.
  - script: |
      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      chmod +x ./cc-test-reporter
      ./cc-test-reporter format-coverage -t coverage.py -o coverage/codeclimate.json coverage/coverage.xml
      ./cc-test-reporter upload-coverage
    displayName: 'Upload test coverage to Code Climate'
    condition: and(succeeded(), eq(variables['uploadCoverage'], 'true'), ne(variables['CODECLIMATE_REPORTER_ID'], ''))
    env:
      CC_TEST_REPORTER_ID: $(CODECLIMATE_REPORTER_ID)
      GIT_BRANCH: $(Build.SourceBranchName)
      GIT_COMMIT: $(Build.SourceVersion)

  # This script only runs for one set of unit tests (to avoid duplicate uploads) and will only run when the variable
  # CODECOV_TOKEN is available, which means this step is disabled for PRs from forked repositories.
  - script: |
      bash <(curl -s https://codecov.io/bash) -Z -t $(CODECOV_TOKEN)
    condition: and(succeeded(), eq(variables['uploadCoverage'], 'true'), ne(variables['CODECOV_TOKEN'], ''))
    displayName: 'Upload test coverage to codecov.io'